//130 + 760
0_100010_00000_00000000000010000010	//R0 = 130
0_100010_00001_00000000001011111000	//R1 = 760
0_100000_00010_00000_00001_00000_00000	//R2 = R0 + R1
//1 - 65536
0_100010_00011_00000000000000000001	//R3 = 1
0_100010_00100_00010000000000000000	//R4 = 65536
0_100000_00101_00011_00100_00000_00001	//R5 = R3 - R4
//255 * (-7)
0_100010_00110_00000000000011111111	//R6 = 255
0_100010_00111_00000000000000000000	//R7 = 0
0_100010_01000_00000000000000000000	//R8 = 0
0_100110_00110_00111_0_00000000000011	//BEQ  if(R6 == R7) JMP TO NEXT LINE
0_101000_01000_01000_111111111111001	//R8 = R8 + -7
0_101000_00111_00111_000000000000001	//R7 = R7 + 1
0_100000_00000_00000_00000_00000_01001	//NOP
0_100100_0_111111111111111111111110	//JMP PC = PC + (-2 << 1)
0_100000_00000_00000_00000_00000_01001	//NOP
0_100000_00000_00000_00000_00000_01001	//NOP, R8 is answer
//40 * 2 - 160 / 4
0_100010_01001_00000000000000101000	//R9 = 40
0_100010_01010_00000000000010100000	//R10 = 160
0_100010_01011_00000000000000000000	//R11 = 0
0_100000_01001_01001_00001_00000_01000	//R9 = R9 << 1
0_100000_01010_01010_00010_00000_01001	//R10 = R10 >> 2
0_100000_01011_01001_01010_00000_00001	//R11 = R9 - R10
//SORT R3=1,R12=0,R27~R31 is array,R20~R23 is judgenum,R24 is temp
//initialized data to memory
0_100010_01101_00000000000000000000 	//R13 = 20'd0
0_100010_01110_00000000000000011011 	//R14 = 20'd27
0_100010_01111_00000000000000000111 	//R15 = 20'd7
0_100010_10000_00000000000000001000 	//R16 = 20'd8
0_100010_10001_00000000000000000100 	//R17 = 20'd4
0_100010_10010_00000000000000000011 	//R18 = 20'd3
0_100010_10011_00000000000000000010 	//R19 = 20'd2
//
0_011100_01111_01101_01110_00_00001010	//SW M27=R15
0_101000_01110_01110_000000000000001	//ADDI R14 = R14 + 1
0_011100_10000_01101_01110_00_00001010	//SW M28=R16
0_101000_01110_01110_000000000000001	//ADDI R14 = R14 + 1
0_011100_10001_01101_01110_00_00001010	//SW M29=R17
0_101000_01110_01110_000000000000001	//ADDI R14 = R14 + 1
0_011100_10010_01101_01110_00_00001010	//SW M30=R18
0_101000_01110_01110_000000000000001	//ADDI R14 = R14 + 1
0_011100_10011_01101_01110_00_00001010	//SW M31=R19
//load memory to register
0_100010_01110_00000000000000011011 	//R14 = 20'd27
0_011100_11011_01101_01110_00_00000010	//LW R27=M27 
0_101000_01110_01110_000000000000001	//ADDI R14 = R14 + 1
0_011100_11100_01101_01110_00_00000010	//LW R28=M28 
0_101000_01110_01110_000000000000001	//ADDI R14 = R14 + 1
0_011100_11101_01101_01110_00_00000010	//LW R29=M29 
0_101000_01110_01110_000000000000001	//ADDI R14 = R14 + 1
0_011100_11110_01101_01110_00_00000010	//LW R30=M30 
0_101000_01110_01110_000000000000001	//ADDI R14 = R14 + 1
0_011100_11111_01101_01110_00_00000010	//LW R31=M31 
//SORT1
0_100000_10100_11011_11100_00000_00001	//R20 = R27 - R28
0_100000_10100_10100_11111_00000_01001	//R20 = R20 SRL (31)
0_100110_10100_00011_0_00000000000010	//BEQ  if(R20 == R3) = if(R27 < R28)
0_101000_11000_11011_000000000000000	//ADDI R24 = R27 + 0
0_101000_11011_11100_000000000000000 	//ADDI R27= R28 + 0
0_101000_11100_11000_000000000000000 	//ADDI R28 = R24 + 0
0_100000_10101_11011_11101_00000_00001	//R21 = R27 - R29
0_100000_10101_10101_11111_00000_01001	//R21 = R21 SRL (31)
0_100110_10101_00011_0_00000000000010	//BEQ  if(R21 == R3) = if(R27 < R29)
0_101000_11000_11011_000000000000000	//ADDI R24 = R27 + 0
0_101000_11011_11101_000000000000000 	//ADDI R27= R29 + 0
0_101000_11101_11000_000000000000000 	//ADDI R29 = R24 + 0
0_100000_10110_11011_11110_00000_00001	//R22 = R27 - R30
0_100000_10110_10110_11111_00000_01001	//R22 = R22 SRL (31)
0_100110_10110_00011_0_00000000000010	//BEQ  if(R22 == R3) = if(R27 < R30)
0_101000_11000_11011_000000000000000	//ADDI R24 = R27 + 0
0_101000_11011_11110_000000000000000 	//ADDI R27= R30 + 0
0_101000_11110_11000_000000000000000 	//ADDI R30 = R24 + 0
0_100000_10111_11011_11111_00000_00001	//R23 = R27 - R31
0_100000_10111_10111_11111_00000_01001	//R23 = R23 SRL (31)
0_100110_10111_00011_0_00000000000010	//BEQ  if(R23 == R3) = if(R27 < R31)
0_101000_11000_11011_000000000000000	//ADDI R24 = R27 + 0
0_101000_11011_11111_000000000000000 	//ADDI R27= R31 + 0
0_101000_11111_11000_000000000000000 	//ADDI R31 = R24 + 0
//SORT2
0_100000_10100_11100_11101_00000_00001	//R20 = R28 - R29
0_100000_10100_10100_11111_00000_01001	//R20 = R20 SRL (31)
0_100110_10100_00011_0_00000000000010	//BEQ  if(R20 == R3) = if(R28 < R29)
0_101000_11000_11100_000000000000000	//ADDI R24 = R28 + 0
0_101000_11100_11101_000000000000000 	//ADDI R28= R29 + 0
0_101000_11101_11000_000000000000000 	//ADDI R29 = R24 + 0
0_100000_10101_11100_11110_00000_00001	//R21 = R28 - R30
0_100000_10101_10101_11111_00000_01001	//R21 = R21 SRL (31)
0_100110_10101_00011_0_00000000000010	//BEQ  if(R21 == R3) = if(R28 < R30)
0_101000_11000_11100_000000000000000	//ADDI R24 = R28 + 0
0_101000_11100_11110_000000000000000 	//ADDI R28= R30 + 0
0_101000_11110_11000_000000000000000 	//ADDI R30 = R24 + 0
0_100000_10110_11100_11111_00000_00001	//R22 = R28 - R31
0_100000_10110_10110_11111_00000_01001	//R22 = R22 SRL (31)
0_100110_10110_00011_0_00000000000010	//BEQ  if(R22 == R3) = if(R28 < R31)
0_101000_11000_11100_000000000000000	//ADDI R24 = R28 + 0
0_101000_11100_11111_000000000000000 	//ADDI R28= R31 + 0
0_101000_11111_11000_000000000000000 	//ADDI R31 = R24 + 0
//SORT3
0_100000_10100_11101_11110_00000_00001	//R20 = R29 - R30
0_100000_10100_10100_11111_00000_01001	//R20 = R20 SRL (31)
0_100110_10100_00011_0_00000000000010	//BEQ  if(R20 == R3) = if(R29 < R30)
0_101000_11000_11101_000000000000000	//ADDI R24 = R29 + 0
0_101000_11101_11110_000000000000000 	//ADDI R29= R30 + 0
0_101000_11110_11000_000000000000000 	//ADDI R30 = R24 + 0
0_100000_10101_11101_11111_00000_00001	//R21 = R29 - R31
0_100000_10101_10101_11111_00000_01001	//R21 = R21 SRL (31)
0_100110_10101_00011_0_00000000000010	//BEQ  if(R21 == R3) = if(R29 < R31)
0_101000_11000_11101_000000000000000	//ADDI R24 = R29 + 0
0_101000_11101_11111_000000000000000 	//ADDI R29= R31 + 0
0_101000_11111_11000_000000000000000 	//ADDI R31 = R24 + 0
//SORT4
0_100000_10100_11110_11111_00000_00001	//R20 = R30 - R31
0_100000_10100_10100_11111_00000_01001	//R20 = R20 SRL (31)
0_100110_10100_00011_0_00000000000010	//BEQ  if(R20 == R3) = if(R30 < R31)
0_101000_11000_11110_000000000000000	//ADDI R24 = R30 + 0
0_101000_11110_11111_000000000000000 	//ADDI R30= R31 + 0
0_101000_11111_11000_000000000000000 	//ADDI R31 = R24 + 0
0_100000_00000_00000_00000_00000_01001	//NOP
//load result data to memory
0_100010_01101_00000000000000000000 	//R13 = 20'd0
0_100010_01110_00000000000000011011 	//R14 = 20'd27
0_011100_11011_01101_01110_00_00001010	//SW M27=R27
0_101000_01110_01110_000000000000001	//ADDI R14 = R14 + 1
0_011100_11100_01101_01110_00_00001010	//SW M28=R28
0_101000_01110_01110_000000000000001	//ADDI R14 = R14 + 1
0_011100_11101_01101_01110_00_00001010	//SW M29=R29
0_101000_01110_01110_000000000000001	//ADDI R14 = R14 + 1
0_011100_11110_01101_01110_00_00001010	//SW M30=R30
0_101000_01110_01110_000000000000001	//ADDI R14 = R14 + 1
0_011100_11111_01101_01110_00_00001010	//SW M31=R31
0_100000_00000_00000_00000_00000_01001	//NOP